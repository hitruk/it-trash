
A little theory

Файлы в рабочем каталоге находятся в состояниях:
-Commited - есть определенная версия файла в каталоге git,
 эта версия считается зафиксированной(commited);
-Stages - если файл был изменен и добавлен в индекс(git add имя_файла),
 значит он индексирован;
-Modified - если файл был изменен с момента последнего распаковывания
 из репозитория, но не был добавлен в индекс(Stages), он считается измененным. 

-изменен(modified)
-индексирован(staged)
-зафиксирован(commited)

Файлы бывают:
-Отслеживаемые (commited) файлы находящиеся в снимке состояния проекта;
-Неотслеживаемые:
  -Измененные
  -Неизмененные, подготовленные к комиту


Fast commands

1 Инициализация git, создает в текущем каталоге, подкаталог с именем .git
git init .

2 Посмотреть статус
git status

3 Добавить снимок в индекс (index)
git add file_name (file_name* если добавляем все файлы в директории)

4 Cоздаем commit изменений
git commit -m 'my comments'

5 Делаем push
git push

!---branch---
! Дописать 

6 Посмотреть все ветки branch:
git branch

Создать ветку:
git branch имя_бренча

Перейти на ветку:
git checkout имя_бренча

Удалить ветку:
git branch -d имя_бранча

Создать и перейти на ветку:
git checkout -b имя_ветки
 
7 Посмотреть историю commit:
git log


!---.ignore---
Игнорировать файлы, директории.

0 Создать файл .gitignore, в данном файле указаны файлы и директории, которые git будет  игнорировать.

# - пустые строки или строки начинающиеся с # игнорируются

1 Исключить все файлы с расширением .py, ( *.py )
Но отслеживать файл lib.py даже если он подпадает под исключение выше:
!lib.py

2 Исключить файл TODO в корневом каталоге, но не файл subdir/TODO:
/TODO

3 Игнорировать все файлы в каталоге build/:
build/

4 Игнорировать файл doc/notes.txt, но не файл doc/server/arch.txt:
doc/*.txt

5 Игнорировать все .txt файлы в каталоге doc/:
doc/**/*.txt




